name: CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # No external dependencies needed - all modules are built-in
        echo "‚úÖ All required modules are part of Python standard library"
        
    - name: Run syntax check
      run: |
        python -m py_compile capability_statement_expander.py
        python -m py_compile test_expander.py
        
    - name: Run unit tests
      run: |
        python test_expander.py
        
    - name: Test with example data
      run: |
        mkdir -p test_output
        python capability_statement_expander.py ./examples ./test_output "http://example.org/CapabilityStatement/example-base-capability" --verbose
        
    - name: Verify output files
      run: |
        # Check if expanded CapabilityStatement was created
        if [ ! -f "./test_output/CapabilityStatement-expanded-example-base-capability.json" ]; then
          echo "‚ùå Expanded CapabilityStatement not found"
          exit 1
        fi
        
        # Count generated files
        FILE_COUNT=$(find ./test_output -name "*.json" | wc -l)
        echo "‚úÖ Generated $FILE_COUNT JSON files"
        
        # Verify minimum expected files
        if [ $FILE_COUNT -lt 3 ]; then
          echo "‚ùå Expected at least 3 files, got $FILE_COUNT"
          exit 1
        fi
        
        echo "üéâ All tests passed!"
        
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-output-python-${{ matrix.python-version }}
        path: ./test_output/
        retention-days: 7

  action-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Test GitHub Action
      uses: ./
      with:
        input_directory: './examples'
        output_directory: './action-test-output'
        capability_statement_url: 'http://example.org/CapabilityStatement/example-base-capability'
        verbose: 'true'
        
    - name: Verify Action Output
      run: |
        echo "üìÅ Action output directory contents:"
        ls -la ./action-test-output/
        
        # Verify the action created files
        if [ ! -d "./action-test-output" ]; then
          echo "‚ùå Output directory not created"
          exit 1
        fi
        
        FILE_COUNT=$(find ./action-test-output -name "*.json" | wc -l)
        echo "‚úÖ Action generated $FILE_COUNT files"
        
        if [ $FILE_COUNT -lt 3 ]; then
          echo "‚ùå Action should generate at least 3 files"
          exit 1
        fi
        
        echo "üéâ GitHub Action test passed!"
        
    - name: Upload action test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: action-test-output
        path: ./action-test-output/
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Check if Python files exist
      run: |
        if [ ! -f "capability_statement_expander.py" ] || [ ! -f "test_expander.py" ]; then
          echo "‚ùå Required Python files not found"
          exit 1
        fi
        echo "‚úÖ Python files found"
        
    - name: Run Black (code formatting check)
      run: |
        black --check --diff capability_statement_expander.py test_expander.py || echo "‚ö†Ô∏è Code formatting could be improved (optional)"
        
    - name: Run isort (import sorting check)  
      run: |
        isort --check-only --diff capability_statement_expander.py test_expander.py || echo "‚ö†Ô∏è Import sorting could be improved (optional)"
        
    - name: Run Flake8 (linting)
      run: |
        flake8 capability_statement_expander.py test_expander.py --max-line-length=88 --extend-ignore=E203,W503 || echo "‚ö†Ô∏è Linting issues found (optional)"